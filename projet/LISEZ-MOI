Voici l'ensemble des fichiers de support pour la realisation du projet,
version du 22/10/2009
------------------------------------------------------------------------------

ast.mli:	  interface definissant la representation de l'arbre de
		  syntaxe abstraite
astPrint.ml*:  	  une fonction d'impression de l'arbre de syntaxe abstraite
canon.ml*:    	  les operations de simplification et linearisation du code
		  intermediaire arborescent
ir.mli: 	  representation du code intermediaire arborescent
irPrint.ml*:  	  fonction d'impression de code intermediaire arborescent
irInterp.ml*:  	  interpreteur de code intermediaire arborescent
irUtil.ml*:  	  fonctions utiles de manipulation de code intermediaire
label.ml*:        gestion des labels
lexer.ml*:    	  analyseur lexical produit a partir de notre lexer.mll
lin.mli:          representation du code intermediaire linearise
Makefile:     	  pour make
mipsAsm.ml*:   	  representation de l'assembleur mips
mipsAsmPrint.ml*: fonction d'impression d'assembleur mips
parser.ml*:   	  analyseur syntaxique produit par notre parser.mly
runtime.s:    	  la "librairie standard de CTigre" en assembleur MIPS
                  (a concatener a l'assembleur que vous produisez)
symbol.ml*:   	  table de symboles
temp.ml*:     	  gestion des temporaires
test-exec.sh:	  script de la proc√©dure automatique de test
TESTS/*		  jeu de test minimal

NOTA:

le Makefile fourni permet deja de compiler un certain nombres des
fichiers ci-dessus et mais ne contient pas de programme "main".
Pour integrer d'autres fichiers a la phase de compilation,
les ajouter dans la variable $(SOURCE) du Makefile. Attention a bien
faire ces ajouts a un endroit compatible avec les dependances.

Cible interessantes fournies par OCamlMakefile:
  make : compilation par defaut (en bytecode)
  make clean : menage
  make nc (ou native-code) : compilation en code natif
  make dc (ou debug-code) : compilation avec -g pour ocamldebug
  make top : compilation de main.top, un toplevel caml contenant tout le code
  make doc : creation automatique d'une documentation, par defaut uniquement
             a partir des mli de $(SOURCES), cf $(DOC_FILES) sinon